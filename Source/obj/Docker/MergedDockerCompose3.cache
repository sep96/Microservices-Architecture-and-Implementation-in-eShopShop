name: dockercompose18136026455286380156
services:
  catalog.api:
    build:
      context: D:\Project\Microservices-Architecture-and-Implementation-in-eShopShop\Source
      dockerfile: Catalog.Api/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catalog.Api
    container_name: Catalog.Api
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: catalogapi
    labels:
      com.microsoft.visual-studio.project-name: Catalog.Api
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages --additionalProbingPath
        /root/.nuget/fallbackpackages2  "/app/Catalog.Api.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Caroline\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Caroline\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Caroline\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  catalogdb:
    image: mongo
    networks:
      default: null
networks:
  default:
    name: dockercompose18136026455286380156_default